name: Release

on:
  push:
    branches:
      - main
    paths:
      - "sa/**"
      - ".github/workflows/release.yml"
  workflow_dispatch:

jobs:
  build:
    name: Build and Release Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build release binary
        run: |
          cd SA
          cargo build --release --target ${{ matrix.target }}
          cd ..

      - name: Archive binary (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          mkdir -p artifacts
          cp sa/target/${{ matrix.target }}/release/sa artifacts/

      - name: Archive binary (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir artifacts
          copy target\${{ matrix.target }}\release\sa.exe artifacts\
        shell: cmd

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: sa-${{ matrix.target }}
          path: artifacts/*

  bump-version:
    name: Auto Increment Version
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.bump.outputs.new_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV

      - name: Bump version
        id: bump
        run: |
          latest="${{ env.latest_tag }}"
          latest="${latest#v}"
          IFS='.' read -r major minor patch <<<"$latest"
          patch=$((patch + 1))
          new_tag="v$major.$minor.$patch"
          echo "new_tag=$new_tag" >> $GITHUB_ENV
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Create new tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ env.new_tag }}
          git push origin ${{ env.new_tag }}

  release:
    name: Create GitHub Release
    needs: [build, bump-version]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: sa-*
          path: ./artifacts
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.bump-version.outputs.new_tag }}
          files: ./artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
